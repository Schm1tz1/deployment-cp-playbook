authentication.skip.paths=/chc/live,/chc/ready
bootstrap.servers=kafka.confluent.svc.cluster.local:9073
config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
config.providers=file
confluent.metadata.basic.auth.user.info=${file:/mnt/secrets/ksqldb-mds-client/bearer.txt:username}:${file:/mnt/secrets/ksqldb-mds-client/bearer.txt:password}
confluent.metadata.bootstrap.server.urls=https://kafka.confluent.svc.cluster.local:8090
confluent.metadata.http.auth.credentials.provider=BASIC
confluent.metadata.ssl.truststore.location=/mnt/sslcerts/truststore.p12
confluent.metadata.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
confluent.support.metrics.enable=true
host.name=ksqldb-0.ksqldb.confluent.svc.cluster.local
ksql.advertised.listener=https://ksqldb-0.ksqldb.confluent.svc.cluster.local:8088
ksql.authentication.plugin.class=io.confluent.ksql.security.VertxBearerOrBasicAuthenticationPlugin
ksql.security.extension.class=io.confluent.ksql.security.KsqlConfluentSecurityExtension
ksql.service.id=confluent.ksqldb_
ksql.sink.replicas=3
ksql.streams.num.standby.replicas=1
ksql.streams.producer.confluent.batch.expiry.ms=9223372036854775807
ksql.streams.producer.max.block.ms=9223372036854775807
ksql.streams.producer.request.timeout.ms=300000
ksql.streams.producer.retries=2147483647
ksql.streams.replication.factor=3
ksql.streams.state.dir=/mnt/data/data/ksql-state
listeners=https://0.0.0.0:8088
public.key.path=/mnt/secrets/mds-token/mdsPublicKey.pem
request.timeout.ms=20000
retry.backoff.ms=500
sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required metadataServerUrls="https://kafka.confluent.svc.cluster.local:8090" username="${file:/mnt/secrets/ksqldb-mds-client/bearer.txt:username}" password="${file:/mnt/secrets/ksqldb-mds-client/bearer.txt:password}";
sasl.login.callback.handler.class=io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
sasl.mechanism=OAUTHBEARER
security.protocol=SASL_SSL
ssl.enabled.protocols=TLSv1.2
ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
ssl.keystore.location=/mnt/sslcerts/keystore.p12
ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
ssl.truststore.location=/mnt/sslcerts/truststore.p12
ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
